// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`workspaces tasks > should register all tasks from all config files 1`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer --list
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] <Bold>Unnamed tasks</BoldDim>
[log] <Bold>-------------</BoldDim>
[log] <Green>backend:build</Green>
[log] <Green>frontend:build</Green>
[log] <Green>frontend:check</Green>
[log] <Green>build</Green>
[log] <Green>check</Green>
[log] <Green>deploy</Green>
[log] <Green>api:build</Green>
[log] <Green>api:check</Green>
[log] <Green>shared:types:build</Green>
[log] <Green>shared:types:check</Green>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>0</BoldDim> task executed
`;

exports[`workspaces tasks > should run tasks as usual 1`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer backend:build shared:api:build
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] <Yellow>></Yellow> Task <Bold>backend:build</BoldDim> <Yellow>STARTED</Yellow>

Build backend successfully!
[log]
<Green>‚úì</Green> Task <Bold>backend:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:check</BoldDim> <Yellow>STARTED</Yellow>

Check API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:build</BoldDim> <Yellow>STARTED</Yellow>

Build API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>3</BoldDim> tasks executed
`;

exports[`workspaces tasks > should run the same task name in workspaces after the main one runs 1`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer build --dry-run
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] <Bold>Execution plan:</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>check</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>shared:types:build</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>build</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>backend:build</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>frontend:check</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:check</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>shared:types:check</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>frontend:build</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:build</BoldDim>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>0</BoldDim> task executed
`;

exports[`workspaces tasks > should run the same task name in workspaces after the main one runs 2`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer build
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] <Yellow>></Yellow> Task <Bold>check</BoldDim> <Yellow>STARTED</Yellow>

Check project successfully!
[log]
<Green>‚úì</Green> Task <Bold>check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>shared:types:build</BoldDim> <Yellow>STARTED</Yellow>

Build types successfully!
[log]
<Green>‚úì</Green> Task <Bold>shared:types:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>build</BoldDim> <Yellow>STARTED</Yellow>

Build project successfully!
[log]
<Green>‚úì</Green> Task <Bold>build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>backend:build</BoldDim> <Yellow>STARTED</Yellow>

Build backend successfully!
[log]
<Green>‚úì</Green> Task <Bold>backend:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>frontend:check</BoldDim> <Yellow>STARTED</Yellow>

Check frontend successfully!
[log]
<Green>‚úì</Green> Task <Bold>frontend:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:check</BoldDim> <Yellow>STARTED</Yellow>

Check API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>shared:types:check</BoldDim> <Yellow>STARTED</Yellow>

Check types successfully!
[log]
<Green>‚úì</Green> Task <Bold>shared:types:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>frontend:build</BoldDim> <Yellow>STARTED</Yellow>

Build frontend successfully!
[log]
<Green>‚úì</Green> Task <Bold>frontend:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:build</BoldDim> <Yellow>STARTED</Yellow>

Build API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>9</BoldDim> tasks executed
`;

exports[`workspaces tasks > should run the workspace task when executing from that workspace unless specifying workspace explicitly 1`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces/frontend
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer check
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] <Yellow>></Yellow> Task <Bold>frontend:check</BoldDim> <Yellow>STARTED</Yellow>

Check frontend successfully!
[log]
<Green>‚úì</Green> Task <Bold>frontend:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>1</BoldDim> task executed
`;

exports[`workspaces tasks > should run the workspace task when executing from that workspace unless specifying workspace explicitly 2`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces/shared/api
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer build
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] <Yellow>></Yellow> Task <Bold>api:check</BoldDim> <Yellow>STARTED</Yellow>

Check API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:build</BoldDim> <Yellow>STARTED</Yellow>

Build API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>2</BoldDim> tasks executed
`;

exports[`workspaces tasks > should run the workspace task when executing from that workspace unless specifying workspace explicitly 3`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces/shared/types
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer root:check
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] <Yellow>></Yellow> Task <Bold>check</BoldDim> <Yellow>STARTED</Yellow>

Check project successfully!
[log]
<Green>‚úì</Green> Task <Bold>check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>frontend:check</BoldDim> <Yellow>STARTED</Yellow>

Check frontend successfully!
[log]
<Green>‚úì</Green> Task <Bold>frontend:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:check</BoldDim> <Yellow>STARTED</Yellow>

Check API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>shared:types:check</BoldDim> <Yellow>STARTED</Yellow>

Check types successfully!
[log]
<Green>‚úì</Green> Task <Bold>shared:types:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>4</BoldDim> tasks executed
`;

exports[`workspaces tasks > should run the workspace task when executing from that workspace unless specifying workspace explicitly 4`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces/shared/types
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer frontend:check
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] <Yellow>></Yellow> Task <Bold>frontend:check</BoldDim> <Yellow>STARTED</Yellow>

Check frontend successfully!
[log]
<Green>‚úì</Green> Task <Bold>frontend:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>1</BoldDim> task executed
`;

exports[`workspaces tasks > should run the workspace task when using alias 1`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer api:build
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] Resolved tasks:
    <Yellow><Bold>api:build</BoldDim></Yellow>  ‚Üí <Green><Bold>shared:api:build</BoldDim></Green>

[log] <Yellow>></Yellow> Task <Bold>api:check</BoldDim> <Yellow>STARTED</Yellow>

Check API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:build</BoldDim> <Yellow>STARTED</Yellow>

Build API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>2</BoldDim> tasks executed
`;

exports[`workspaces tasks > task resolvation 1`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces/frontend
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer biuld backend:biuld deplyo
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] Resolved tasks:
    <Yellow><Bold>backend:biuld</BoldDim></Yellow>  ‚Üí <Green><Bold>backend:build</BoldDim></Green>
    <Yellow><Bold>deplyo       </BoldDim></Yellow>  ‚Üí <Green><Bold>root:deploy</BoldDim></Green>

[log] <Yellow>></Yellow> Task <Bold>frontend:check</BoldDim> <Yellow>STARTED</Yellow>

Check frontend successfully!
[log]
<Green>‚úì</Green> Task <Bold>frontend:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:check</BoldDim> <Yellow>STARTED</Yellow>

Check API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>shared:types:check</BoldDim> <Yellow>STARTED</Yellow>

Check types successfully!
[log]
<Green>‚úì</Green> Task <Bold>shared:types:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>frontend:build</BoldDim> <Yellow>STARTED</Yellow>

Build frontend successfully!
[log]
<Green>‚úì</Green> Task <Bold>frontend:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>backend:build</BoldDim> <Yellow>STARTED</Yellow>

Build backend successfully!
[log]
<Green>‚úì</Green> Task <Bold>backend:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>deploy</BoldDim> <Yellow>STARTED</Yellow>

Deploy project successfully!
[log]
<Green>‚úì</Green> Task <Bold>deploy</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>6</BoldDim> tasks executed
`;

exports[`workspaces tasks > task resolvation 2`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces/frontend
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer fronte:build backe:biuld
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log] Resolved tasks:
    <Yellow><Bold>backe:biuld</BoldDim></Yellow>  ‚Üí <Green><Bold>backend:build</BoldDim></Green>

[log] <Yellow>></Yellow> Task <Bold>frontend:check</BoldDim> <Yellow>STARTED</Yellow>

Check frontend successfully!
[log]
<Green>‚úì</Green> Task <Bold>frontend:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>api:check</BoldDim> <Yellow>STARTED</Yellow>

Check API successfully!
[log]
<Green>‚úì</Green> Task <Bold>api:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>shared:types:check</BoldDim> <Yellow>STARTED</Yellow>

Check types successfully!
[log]
<Green>‚úì</Green> Task <Bold>shared:types:check</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>frontend:build</BoldDim> <Yellow>STARTED</Yellow>

Build frontend successfully!
[log]
<Green>‚úì</Green> Task <Bold>frontend:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log] <Yellow>></Yellow> Task <Bold>backend:build</BoldDim> <Yellow>STARTED</Yellow>

Build backend successfully!
[log]
<Green>‚úì</Green> Task <Bold>backend:build</BoldDim> <Green>DONE</Green> <Dim>{duration}</BoldDim>
[log]
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim>
[log] <Bold>5</BoldDim> tasks executed
`;

exports[`workspaces tasks > task resolvation 3`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces/frontend
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer prepare
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log]
<Bold><Red>RUN FAILED</Red></BoldDim> in <Bold>{duration}</BoldDim> <Dim>(<Bold>0</BoldDim><Dim> task executed, <Bold>0</BoldDim><Dim> task failed)</BoldDim>
[log]
For more details, re-run the command with the <Yellow>--stacktrace</Yellow> option to display the full error and help identify the root cause.
---------- Stderr ------------
[error] Task <Yellow><Bold>prepare</BoldDim></Yellow> not found in <Yellow><Bold>frontend</BoldDim></Yellow> nor <Yellow><Bold>root</BoldDim></Yellow> workspace.
`;

exports[`workspaces tasks > task resolvation 4`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces/frontend
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer unknown:build
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log]
<Bold><Red>RUN FAILED</Red></BoldDim> in <Bold>{duration}</BoldDim> <Dim>(<Bold>0</BoldDim><Dim> task executed, <Bold>0</BoldDim><Dim> task failed)</BoldDim>
[log]
For more details, re-run the command with the <Yellow>--stacktrace</Yellow> option to display the full error and help identify the root cause.
---------- Stderr ------------
[error] Workspace <Yellow><Bold>unknown</BoldDim></Yellow> not found.
`;

exports[`workspaces tasks > task resolvation 5`] = `
---------- Context -----------
Working Directory: /ROOT/test/__fixtures__/pnpm-workspaces/frontend
Command: /ROOT/nadle.mjs --max-workers 1 --no-footer end:build
---------- Stdout ------------
[log] <Bold><Cyan>üõ†Ô∏è Welcome to Nadle {version}!</Cyan></BoldDim>
[log] Using Nadle from /ROOT/lib/index.js
[log] Loaded configuration from /ROOT/test/__fixtures__/pnpm-workspaces/nadle.config.ts and 4 other(s) files

[log]
<Bold><Red>RUN FAILED</Red></BoldDim> in <Bold>{duration}</BoldDim> <Dim>(<Bold>0</BoldDim><Dim> task executed, <Bold>0</BoldDim><Dim> task failed)</BoldDim>
[log]
For more details, re-run the command with the <Yellow>--stacktrace</Yellow> option to display the full error and help identify the root cause.
---------- Stderr ------------
[error] Workspace <Yellow><Bold>end</BoldDim></Yellow> not found. Did you mean <Yellow><Bold>api</BoldDim></Yellow>?
`;
