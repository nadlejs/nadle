// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`--log-level > shows debug log when passing --log-level=debug > stdout 1`] = `
[info] Initialized logger with level 4
[info] Nadle initialized with options: { tasks: [ 'hello' ],
  list: false,
  dryRun: false,
  showSummary: false,
  isWorkerThread: false,
  maxWorkers: 1,
  logLevel: 'debug',
  config: 'build.nadle.ts',
  minWorkers: undefined,
  configPath: 'build.nadle.ts' }
[info] Resolved config file: /ROOT/test/fixtures/build.nadle.ts
[info] Execution started
[info] Maximum threads: 1
[info] Minimum threads: 1
[info] Task <Bold>hello</BoldDim> queued
[log] <Yellow>></Yellow> Task <Bold>hello</BoldDim> started
Hello from nadle!
[log] <Green>✓</Green> Task <Bold>hello</BoldDim> done in {duration}
[info] Execution finished
[log] 
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim> <Dim>(<Bold>1</BoldDim><Dim> task executed)</BoldDim>
`;

exports[`--log-level > shows error log only when passing --log-level=error > stdout 1`] = `"Hello from nadle!"`;

exports[`--log-level > shows info log when passing --log-level=info > stdout 1`] = `
[info] Initialized logger with level 3
[info] Nadle initialized with options: { tasks: [ 'hello' ],
  list: false,
  dryRun: false,
  showSummary: false,
  isWorkerThread: false,
  maxWorkers: 1,
  logLevel: 'info',
  config: 'build.nadle.ts',
  minWorkers: undefined,
  configPath: 'build.nadle.ts' }
[info] Resolved config file: /ROOT/test/fixtures/build.nadle.ts
[info] Execution started
[info] Maximum threads: 1
[info] Minimum threads: 1
[info] Task <Bold>hello</BoldDim> queued
[log] <Yellow>></Yellow> Task <Bold>hello</BoldDim> started
Hello from nadle!
[log] <Green>✓</Green> Task <Bold>hello</BoldDim> done in {duration}
[info] Execution finished
[log] 
<Bold><Green>RUN SUCCESSFUL</Green></BoldDim> in <Bold>{duration}</BoldDim> <Dim>(<Bold>1</BoldDim><Dim> task executed)</BoldDim>
`;
